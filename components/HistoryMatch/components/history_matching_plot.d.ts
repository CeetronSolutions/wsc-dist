export default class HistoryMatchingPlot extends Component {
    constructor(config?: {});
    parentElement: any;
    width: any;
    height: any;
    position: any;
    maxHorizontalValue: number;
    notePosition: any;
    data: {
        name: string;
        positive: never[];
        negative: never[];
        labels: never[];
    };
    SIGMA_LETTER: string;
    NEGATIVE_BARS_COLOR: string;
    NEGATIVE_BARS_OPACITY: number;
    NEGATIVE_BARS_STROKE: string;
    POSITIVE_BARS_COLOR: string;
    POSITIVE_BARS_OPACITY: number;
    POSITIVE_BARS_STROKE: string;
    PLOT_MARGIN: number;
    LABEL_MARGIN: number;
    LABEL_FONT_SIZE: number;
    confidenceIntervalUnsorted: any;
    confidenceIntervalSorted: any;
    validate(config: any): void;
    setData(data: any): void;
    render(): void;
    renderUpdate(): void;
    renderContainer(): void;
    container: any;
    renderTitle(): void;
    renderPlot(): void;
    renderPlotContainer(): void;
    plotContainer: any;
    xScale: d3.ScaleLinear<number, number, never> | undefined;
    yScale: (string[] & d3.ScaleBand<string>) | undefined;
    renderHorizontalScale(): void;
    renderLegend(): void;
    legend: Legend | undefined;
    renderParameterLabels(): void;
    renderNegativeBars(): void;
    renderPositiveBars(): void;
    showTooltip(index: any, node: any): void;
    hideTooltip(node: any): void;
    renderConfidenceIntervals(): void;
    _renderUnsorted(): void;
    _renderSorted(): void;
    lineContainer: any;
    renderTooltip(): void;
    tooltip: any;
}
import Component from "../../../shared/component";
import * as d3 from "d3";
import Legend from "../utils/legend";
